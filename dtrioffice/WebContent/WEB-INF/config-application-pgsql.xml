<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd 
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd 
						http://www.springframework.org/schema/jdbc 
						http://www.springframework.org/schema/jdbc/spring-jdbc-5.2.xsd 
						http://www.springframework.org/schema/cache 
						http://www.springframework.org/schema/cache/spring-cache-5.2.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd 
						http://www.springframework.org/schema/util 
						http://www.springframework.org/schema/util/spring-util.xsd
						http://www.springframework.org/schema/mvc 
					    http://www.springframework.org/schema/mvc/spring-mvc.xsd 
					    http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task-4.2.xsd">

	<!-- 自動掃描web包 ,將帶有註解的類 納入spring容器管理 -->
	<context:component-scan base-package="dtri.com" />
	<task:annotation-driven scheduler="scheduler" mode="proxy" />
	<task:scheduler id="scheduler" pool-size="10" />
	<!-- 對應位置 -->
	<mvc:resources mapping="/html/**" location="/WEB-INF/jsp/template/html/" />
	<mvc:resources mapping="/resources/**" location="/WEB-INF/jsp/template/resources/" />
	<mvc:resources mapping="/thirdparty/**" location="/WEB-INF/jsp/thirdparty/" />
	<mvc:annotation-driven />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*.do" />
			<bean class="dtri.com.controller.LoginHandlerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 引入(application.properties)jdbc配置檔案 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="UTF-8" />
		<property name="location">
			<!-- 外部配置 -->
			<value>file:${catalina.home}/WebAppConfig/application.properties</value>
			<!-- 內部配置<value>classpath:/application.properties</value> -->
		</property>
	</bean>

	<!-- dataSource 配置(PgSql) -->
	<bean id="dataSourcePgSql" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本屬性 url、user、password -->
		<property name="url" value="${jdbc.postgersql.url}" />
		<property name="username" value="${jdbc.postgersql.username}" />
		<property name="password" value="${jdbc.postgersql.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="10" />
		<!-- 配置獲取連線等待超時的時間，單位是毫秒 -->
		<property name="maxWait" value="60000" />
		<!-- 配置間隔多久才進行一次檢測，檢測需要關閉的空閒連線，單位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一個連線在池中最小生存的時間，單位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 開啟PSCache，並且指定每個連線上PSCache的大小 -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<!-- 配置監控統計攔截的filters -->
		<property name="filters" value="stat" />
	</bean>

	<!-- mybatis檔案配置，掃描所有mapper檔案(Pgsql) -->
	<bean id="pgSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" p:dataSource-ref="dataSourcePgSql" p:configLocation="/WEB-INF/config-mybatis-pgsql.xml"
		p:mapperLocations="/WEB-INF/mapper-mybatis-pgsql/*.xml" />
	<!-- spring與mybatis整合配置，掃描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="dtri.com.db.pgsql.dao" p:sqlSessionFactoryBeanName="pgSqlSessionFactory" />
	<!-- 對dataSource 資料來源進行事務管理 -->
	<bean id="transactionManagerPgSql" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSourcePgSql" />
	<!-- 啟用對事務註解的支援 -->
	<tx:annotation-driven transaction-manager="transactionManagerPgSql" />
</beans> 